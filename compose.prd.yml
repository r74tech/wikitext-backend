services:
  postgres:
    image: postgres:bookworm
    container_name: wikitext-postgres
    restart: unless-stopped
    env_file:
      - .env.prd
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      PGDATA: /var/lib/postgresql/data/pgdata
      PGPORT: ${POSTGRES_PORT}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -p ${POSTGRES_PORT}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - wikitext-network

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: wikitext-app
    restart: unless-stopped
    env_file:
      - .env.prd
    environment:
      NODE_ENV: production
      PORT: ${PORT}
      DATABASE_HOST: postgres
      DATABASE_PORT: ${POSTGRES_PORT}
      DATABASE_NAME: ${POSTGRES_DB}
      DATABASE_USER: ${POSTGRES_USER}
      DATABASE_PASSWORD: ${POSTGRES_PASSWORD}
      CORS_ORIGINS: ${CORS_ORIGINS}
      LOG_LEVEL: ${LOG_LEVEL}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - wikitext-network
    volumes:
      - ./logs:/app/logs

  https-portal:
    image: steveltn/https-portal:1
    container_name: wikitext-https-portal
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    environment:
      DOMAINS: "apiwd.r74.tech -> http://app:8300"
      STAGE: production
      # FORCE_RENEW: 'true' # Uncomment to force renew certificates
    depends_on:
      - app
    networks:
      - wikitext-network
    volumes:
      - https-portal-data:/var/lib/https-portal

  migrate:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: wikitext-migrate
    command: ["run", "src/db/migrate.ts", "up"]
    env_file:
      - .env.prd
    environment:
      DATABASE_HOST: postgres
      DATABASE_PORT: ${POSTGRES_PORT}
      DATABASE_NAME: ${POSTGRES_DB}
      DATABASE_USER: ${POSTGRES_USER}
      DATABASE_PASSWORD: ${POSTGRES_PASSWORD}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - wikitext-network
    profiles:
      - tools

volumes:
  postgres_data:
    driver: local
  https-portal-data:
    driver: local

networks:
  wikitext-network:
    driver: bridge
